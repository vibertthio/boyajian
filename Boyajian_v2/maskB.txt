PShape maskB;

void maskBSetting() {
  maskB = loadShape("maskB/maskB.obj");
}


void maskBdrawing() {
  m.beginDraw();
  m.background(0, 0, 0, 0);
  GL2 gl = ((PJOGL)beginPGL()).gl.getGL2();
  gl.glEnable(GL2.GL_BLEND); 
  
  gl.glBlendFunc(GL2.GL_SRC_ALPHA,GL2.GL_ONE_MINUS_SRC_ALPHA); 
  gl.glEnable(GL2.GL_ALPHA_TEST);
  //gl.glDisable(GL2.GL_ALPHA_TEST);
  gl.glAlphaFunc(GL2.GL_GREATER, 0.5f);

  m.shader(texlightShader);
  m.pointLight(0,0,0, map(sin(float(frameCount%300)/300*6.28), -1, 1, 400, -400)
    , map(sin(float(frameCount%600)/600*6.28), -1, 1, 200, 600), 1200); 
  

  m.pushMatrix();
  m.translate(width/2, height/2+75+map(sin(float(frameCount%300)/300*6.28), -1, 1, 0, -50), -50);
  m.rotateZ(PI);
  m.rotateY(sin(float(frameCount%300)/300*6.28)*0.3);
  m.shape(maskB);

  m.popMatrix();
  m.endDraw();
  endPGL();
}